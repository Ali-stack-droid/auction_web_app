{"version":3,"file":"static/js/270.59c451af.chunk.js","mappings":"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","sources":["components/authentication/login/LoginStyles.tsx","components/authentication/login/Carousal.tsx","../node_modules/@mui/material/Link/linkClasses.js","../node_modules/@mui/material/Link/getTextDecoration.js","../node_modules/@mui/material/Link/Link.js","../node_modules/@mui/icons-material/esm/HighlightOff.js","components/custom-components/CustomModal.tsx","components/authentication/login/LoginForm.tsx","../node_modules/@mui/icons-material/esm/KeyboardBackspace.js","components/authentication/login/ForgotPassword.tsx","components/authentication/login/ResetPassword.tsx","components/authentication/login/SetNewPassword.tsx","components/authentication/Login.tsx"],"sourcesContent":["import { makeStyles } from '@mui/styles';\n\nexport const useCarousalStyles = makeStyles({\n    container: {\n        flex: 1,\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        padding: 8,\n    },\n    text: {\n        marginBottom: 16,\n    },\n    logo: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: \"100%\",\n        padding: \"20px 0\",\n    },\n    imageWrapper: {\n        textAlign: 'center',\n        width: '100%',\n    },\n    image: {\n        width: '80%',\n        height: 'auto',\n        transition: 'width 0.2s ease-in-out',\n    },\n    dotsContainer: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        marginTop: 16,\n    },\n    dotButton: {\n        size: 'small',\n        width: 18,\n        height: 18,\n        margin: '0 4px !important',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        transition: 'background-color 0.5s ease-in-out',\n    },\n});\n\nexport const useLoginStyles = makeStyles({\n    root: {\n        display: 'flex',\n        minHeight: '92vh',\n        overflow: 'hidden',\n        flexDirection: 'column',\n        '@media (min-width:600px)': {\n            flexDirection: 'row',\n        },\n    },\n    carouselContainer: {\n        flex: 1,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        overflow: 'hidden',\n    },\n    componentContainer: {\n        flex: 1,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        overflow: 'hidden',\n    },\n    fadeWrapper: {\n        width: '100%',\n    },\n});\n\nexport const useForgotPasswordStyles = makeStyles({\n    container: {\n        flex: 1,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        padding: '16px',\n    },\n    formWrapper: {\n        width: '100%',\n        maxWidth: 400,\n    },\n    title: {\n        marginBottom: '16px',\n    },\n    description: {\n        marginBottom: '16px',\n        fontSize: '15px',\n    },\n    label: {\n        paddingTop: '16px',\n        fontWeight: 600,\n        fontSize: '15px',\n    },\n});\n\nexport const useResetPasswordStyles = makeStyles({\n    codeInputContainer: {\n        display: 'flex',\n        justifyContent: 'start',\n        alignItems: 'center',\n        gap: 8,\n    },\n});\n\n// New styles for SetNewPassword\nexport const useSetNewPasswordStyles = makeStyles({\n    container: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: '100%',\n    },\n    paper: {\n        padding: 4,\n        maxWidth: 400,\n        width: '100%',\n    },\n    title: {\n        padding: '8px 0',\n    },\n    description: {\n        fontSize: 16,\n        marginBottom: '16px',\n    },\n    label: {\n        fontWeight: 600,\n        fontSize: 15,\n        paddingTop: '16px',\n    },\n    textFieldWrapper: {\n        width: '100%',\n        padding: '8px 0',\n    },\n    buttonWrapper: {\n        marginTop: '16px',\n        fontSize: 16,\n    },\n});","import { useState, useEffect, useRef } from 'react';\nimport { Box, IconButton, Fade, Typography, useTheme, useMediaQuery } from '@mui/material';\nimport FiberManualRecordIcon from '@mui/icons-material/FiberManualRecord';\nimport { useCarousalStyles } from './LoginStyles';\n\nconst Carousel = () => {\n    const theme: any = useTheme();\n    const primaryColor = theme.palette.primary.main;\n\n    const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n    const classes = useCarousalStyles();\n\n    const [currentIndex, setCurrentIndex] = useState(0);\n    const [fadeIn, setFadeIn] = useState(true);\n    const intervalRef = useRef<NodeJS.Timeout | null>(null);\n\n    const items = [\n        { svg: 'imglogin1.svg', text: 'Lorem ipsum dolor sit amet' },\n        { svg: 'imglogin2.svg', text: 'Lorem ipsum dolor sit adipisicing' },\n        { svg: 'imglogin1.svg', text: 'Lorem ipsum dolor sit' },\n    ];\n\n    useEffect(() => {\n        if (intervalRef.current) {\n            clearInterval(intervalRef.current);\n        }\n\n        intervalRef.current = setInterval(() => {\n            setFadeIn(false);\n            setTimeout(() => {\n                setCurrentIndex((prevIndex) => (prevIndex + 1) % items.length);\n                setFadeIn(true);\n            }, 500);\n        }, 5000);\n\n        return () => {\n            if (intervalRef.current) {\n                clearInterval(intervalRef.current);\n            }\n        };\n    }, []);\n\n    const handleDotClick = (index: number) => {\n        if (intervalRef.current) {\n            clearInterval(intervalRef.current);\n        }\n\n        setFadeIn(false);\n\n        setTimeout(() => {\n            setCurrentIndex(index);\n            setFadeIn(true);\n        }, 500);\n\n        intervalRef.current = setInterval(() => {\n            setFadeIn(false);\n            setTimeout(() => {\n                setCurrentIndex((prevIndex) => (prevIndex + 1) % items.length);\n                setFadeIn(true);\n            }, 500);\n        }, 5000);\n    };\n\n    return (\n        <Box\n            className={classes.container}\n            style={{\n                height: isMobile ? '300px' : '90%',\n            }}\n        >\n            {/* Logo */}\n            <Box className={classes.logo}>\n                <img\n                    src={`${process.env.PUBLIC_URL}/assets/svgs/logo.svg`}\n                    alt=\"Parker's Auction\"\n                    style={{ width: '30%', }}\n                />\n            </Box>\n            <Fade in={fadeIn} timeout={1000}>\n                <Box className={classes.imageWrapper}>\n                    <Box\n                        component=\"img\"\n                        src={`${process.env.PUBLIC_URL}/assets/svgs/${items[currentIndex].svg}`}\n                        alt={`SVG ${currentIndex}`}\n                        className={classes.image}\n                    />\n                </Box>\n            </Fade>\n\n            <Box className={classes.dotsContainer}>\n                {items.map((_, index) => (\n                    <IconButton\n                        key={index}\n                        onClick={() => handleDotClick(index)}\n                        className={classes.dotButton}\n                        sx={{\n                            backgroundColor: currentIndex === index ? primaryColor : 'transparent',\n                            border: `2px solid ${primaryColor}`,\n                            '& svg': {\n                                fill: currentIndex === index ? primaryColor : theme.palette.primary.main3,\n                                transition: 'fill 0.5s ease-in-out',\n                            },\n                        }}\n                    >\n                        <FiberManualRecordIcon />\n                    </IconButton>\n                ))}\n            </Box>\n        </Box>\n    );\n};\n\nexport default Carousel;\n","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getLinkUtilityClass(slot) {\n  return generateUtilityClass('MuiLink', slot);\n}\nconst linkClasses = generateUtilityClasses('MuiLink', ['root', 'underlineNone', 'underlineHover', 'underlineAlways', 'button', 'focusVisible']);\nexport default linkClasses;","import { getPath } from '@mui/system/style';\nimport { alpha } from '@mui/system/colorManipulator';\nconst getTextDecoration = ({\n  theme,\n  ownerState\n}) => {\n  const transformedColor = ownerState.color;\n  const color = getPath(theme, `palette.${transformedColor}`, false) || ownerState.color;\n  const channelColor = getPath(theme, `palette.${transformedColor}Channel`);\n  if ('vars' in theme && channelColor) {\n    return `rgba(${channelColor} / 0.4)`;\n  }\n  return alpha(color, 0.4);\n};\nexport default getTextDecoration;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { alpha } from '@mui/system/colorManipulator';\nimport elementTypeAcceptingRef from '@mui/utils/elementTypeAcceptingRef';\nimport composeClasses from '@mui/utils/composeClasses';\nimport isFocusVisible from '@mui/utils/isFocusVisible';\nimport capitalize from \"../utils/capitalize.js\";\nimport { styled, useTheme } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport createSimplePaletteValueFilter from \"../utils/createSimplePaletteValueFilter.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport Typography from \"../Typography/index.js\";\nimport linkClasses, { getLinkUtilityClass } from \"./linkClasses.js\";\nimport getTextDecoration from \"./getTextDecoration.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst v6Colors = {\n  primary: true,\n  secondary: true,\n  error: true,\n  info: true,\n  success: true,\n  warning: true,\n  textPrimary: true,\n  textSecondary: true,\n  textDisabled: true\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    component,\n    focusVisible,\n    underline\n  } = ownerState;\n  const slots = {\n    root: ['root', `underline${capitalize(underline)}`, component === 'button' && 'button', focusVisible && 'focusVisible']\n  };\n  return composeClasses(slots, getLinkUtilityClass, classes);\n};\nconst LinkRoot = styled(Typography, {\n  name: 'MuiLink',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`underline${capitalize(ownerState.underline)}`], ownerState.component === 'button' && styles.button];\n  }\n})(memoTheme(({\n  theme\n}) => {\n  return {\n    variants: [{\n      props: {\n        underline: 'none'\n      },\n      style: {\n        textDecoration: 'none'\n      }\n    }, {\n      props: {\n        underline: 'hover'\n      },\n      style: {\n        textDecoration: 'none',\n        '&:hover': {\n          textDecoration: 'underline'\n        }\n      }\n    }, {\n      props: {\n        underline: 'always'\n      },\n      style: {\n        textDecoration: 'underline',\n        '&:hover': {\n          textDecorationColor: 'inherit'\n        }\n      }\n    }, {\n      props: ({\n        underline,\n        ownerState\n      }) => underline === 'always' && ownerState.color !== 'inherit',\n      style: {\n        textDecorationColor: 'var(--Link-underlineColor)'\n      }\n    }, ...Object.entries(theme.palette).filter(createSimplePaletteValueFilter()).map(([color]) => ({\n      props: {\n        underline: 'always',\n        color\n      },\n      style: {\n        '--Link-underlineColor': theme.vars ? `rgba(${theme.vars.palette[color].mainChannel} / 0.4)` : alpha(theme.palette[color].main, 0.4)\n      }\n    })), {\n      props: {\n        underline: 'always',\n        color: 'textPrimary'\n      },\n      style: {\n        '--Link-underlineColor': theme.vars ? `rgba(${theme.vars.palette.text.primaryChannel} / 0.4)` : alpha(theme.palette.text.primary, 0.4)\n      }\n    }, {\n      props: {\n        underline: 'always',\n        color: 'textSecondary'\n      },\n      style: {\n        '--Link-underlineColor': theme.vars ? `rgba(${theme.vars.palette.text.secondaryChannel} / 0.4)` : alpha(theme.palette.text.secondary, 0.4)\n      }\n    }, {\n      props: {\n        underline: 'always',\n        color: 'textDisabled'\n      },\n      style: {\n        '--Link-underlineColor': (theme.vars || theme).palette.text.disabled\n      }\n    }, {\n      props: {\n        component: 'button'\n      },\n      style: {\n        position: 'relative',\n        WebkitTapHighlightColor: 'transparent',\n        backgroundColor: 'transparent',\n        // Reset default value\n        // We disable the focus ring for mouse, touch and keyboard users.\n        outline: 0,\n        border: 0,\n        margin: 0,\n        // Remove the margin in Safari\n        borderRadius: 0,\n        padding: 0,\n        // Remove the padding in Firefox\n        cursor: 'pointer',\n        userSelect: 'none',\n        verticalAlign: 'middle',\n        MozAppearance: 'none',\n        // Reset\n        WebkitAppearance: 'none',\n        // Reset\n        '&::-moz-focus-inner': {\n          borderStyle: 'none' // Remove Firefox dotted outline.\n        },\n        [`&.${linkClasses.focusVisible}`]: {\n          outline: 'auto'\n        }\n      }\n    }]\n  };\n}));\nconst Link = /*#__PURE__*/React.forwardRef(function Link(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiLink'\n  });\n  const theme = useTheme();\n  const {\n    className,\n    color = 'primary',\n    component = 'a',\n    onBlur,\n    onFocus,\n    TypographyClasses,\n    underline = 'always',\n    variant = 'inherit',\n    sx,\n    ...other\n  } = props;\n  const [focusVisible, setFocusVisible] = React.useState(false);\n  const handleBlur = event => {\n    if (!isFocusVisible(event.target)) {\n      setFocusVisible(false);\n    }\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n  const handleFocus = event => {\n    if (isFocusVisible(event.target)) {\n      setFocusVisible(true);\n    }\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n  const ownerState = {\n    ...props,\n    color,\n    component,\n    focusVisible,\n    underline,\n    variant\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(LinkRoot, {\n    color: color,\n    className: clsx(classes.root, className),\n    classes: TypographyClasses,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: ref,\n    ownerState: ownerState,\n    variant: variant,\n    ...other,\n    sx: [...(v6Colors[color] === undefined ? [{\n      color\n    }] : []), ...(Array.isArray(sx) ? sx : [sx])],\n    style: {\n      ...other.style,\n      ...(underline === 'always' && color !== 'inherit' && !v6Colors[color] && {\n        '--Link-underlineColor': getTextDecoration({\n          theme,\n          ownerState\n        })\n      })\n    }\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the link.\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['primary', 'secondary', 'success', 'error', 'info', 'warning', 'textPrimary', 'textSecondary', 'textDisabled']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * `classes` prop applied to the [`Typography`](https://mui.com/material-ui/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n  /**\n   * Controls when the link should have an underline.\n   * @default 'always'\n   */\n  underline: PropTypes.oneOf(['always', 'hover', 'none']),\n  /**\n   * Applies the theme typography styles.\n   * @default 'inherit'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string])\n} : void 0;\nexport default Link;","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M14.59 8 12 10.59 9.41 8 8 9.41 10.59 12 8 14.59 9.41 16 12 13.41 14.59 16 16 14.59 13.41 12 16 9.41zM12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2m0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8\"\n}), 'HighlightOff');","import React from 'react';\nimport { Dialog, DialogContent, IconButton, Box, Typography } from '@mui/material';\nimport HighlightOffIcon from '@mui/icons-material/HighlightOff';\n\nconst CustomModal = ({ open, onClose, modalType }: any) => {\n    const modalContent = [\n        {\n            type: \"login\",\n            title: \"Congratulations!\",\n            desc: \"You have successfully logged into the system!\",\n            svg: `${process.env.PUBLIC_URL}/assets/svgs/congratulation.svg`,\n        },\n        {\n            type: \"password\",\n            title: \"Congratulations!\",\n            desc: \"Your password has been updated successfully!\",\n            svg: `${process.env.PUBLIC_URL}/assets/svgs/check.svg`,\n        },\n        {\n            type: \"savelot\",\n            title: \"Save Your Lot!\",\n            desc: \"Please save your current lot first.\",\n            // svg: `${process.env.PUBLIC_URL}/assets/svgs/check.svg`,\n        },\n    ];\n\n    // Find the content for the current modalType\n    const content = modalContent.find((item) => item.type === modalType);\n\n    if (!content) return null; // Return nothing if no content matches the modalType\n\n    return (\n        <Dialog open={open} onClose={onClose}>\n            <IconButton onClick={onClose} color=\"primary\" sx={{ position: 'absolute', right: 0 }}>\n                <HighlightOffIcon />\n            </IconButton>\n            <DialogContent sx={{ my: 2 }}>\n\n                {content.svg && <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n                    <Box\n                        component=\"img\"\n                        src={content.svg}\n                        alt={content.title}\n                        sx={{\n                            width: \"120px\", // Responsive width\n                            height: 'auto', // Maintain aspect ratio\n                            transition: 'width 0.2s ease-in-out', // Smooth resize\n                        }}\n                    />\n                </Box>}\n\n                <Typography variant=\"h4\" textAlign=\"center\" mt={2} color=\"primary\">\n                    {content.title}\n                </Typography>\n\n                <Typography variant=\"body1\" textAlign=\"center\" mt={2}>\n                    {content.desc}\n                </Typography>\n            </DialogContent>\n        </Dialog>\n    );\n};\n\nexport default CustomModal;\n","import { Box, Typography, Paper, Link, IconButton, InputAdornment, CircularProgress } from '@mui/material';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport CustomTextField from '../../custom-components/CustomTextField';\nimport CustomButton from '../../custom-components/CustomButton';\nimport CustomModal from '../../custom-components/CustomModal';\nimport theme from '../../../theme';\nimport { SignInUser } from '../../Services/Methods';\nimport { ErrorMessage } from '../../../utils/ToastMessages';\n\n\nconst LoginForm = ({ setIsAuthenticated }: any) => {\n    const navigate = useNavigate();\n\n    const [showPassword, setShowPassword] = useState(false);\n    const [openModal, setOpenModal] = useState(false)\n    const [isSubmitting, setIsSubmitting] = useState(false);\n\n    // Formik setup\n    const formik = useFormik({\n        initialValues: {\n            email: '',\n            password: '',\n        },\n        validationSchema: Yup.object({\n            email: Yup.string()\n                .email('Invalid email address')\n                .required('Email is required'),\n            password: Yup.string()\n                .min(3, 'Password should be at least 8 characters')\n                .required('Password is required'),\n        }),\n        onSubmit: (values) => {\n            loginUser(values)\n        },\n    });\n\n    const loginUser = async (payload: LogInPayload) => {\n        setIsSubmitting(true)\n        try {\n            // check status and show error if any\n            const response = await SignInUser(payload)\n\n            setIsSubmitting(false)\n            if (response?.status == 200) {\n                setOpenModal(true)\n\n                setTimeout(() => {\n                    setOpenModal(false)\n                    navigate('/')\n                    sessionStorage.setItem('email', JSON.stringify(payload.email));\n                    setIsAuthenticated(true)\n                }, 2000);\n            }\n        } catch (error: any) {\n            if (error.response?.status == 404) {\n                ErrorMessage(\"User not found check email or password\")\n            } else {\n                ErrorMessage(\"An error occurred\")\n            }\n        } finally {\n            setIsSubmitting(false)\n        }\n    }\n\n    const togglePasswordVisibility = () => {\n        setShowPassword((prev) => !prev);\n    };\n\n    return (\n        <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" width=\"100%\">\n            <Paper elevation={0} sx={{ padding: 4, maxWidth: 400, width: '100%' }}>\n                <Typography variant={'h5'} py={0.5}>\n                    Login\n                </Typography>\n                <Typography fontSize={16} gutterBottom>\n                    Sign in to continue into the platform.\n                </Typography>\n                <form onSubmit={formik.handleSubmit}>\n                    <Box width=\"100%\" sx={{ py: 1 }}>\n                        <Typography fontWeight=\"600\" fontSize={15} py={1}>\n                            Email:\n                        </Typography>\n                        <CustomTextField\n                            fullWidth\n                            type=\"email\"\n                            required\n                            name=\"email\"\n                            value={formik.values.email}\n                            onChange={formik.handleChange}\n                            onBlur={formik.handleBlur}\n                            error={formik.touched.email && Boolean(formik.errors.email)}\n                            helperText={formik.touched.email && formik.errors.email}\n                            placeholder=\"user123@gmail.com\"\n                        />\n                    </Box>\n                    <Box>\n                        <Typography fontWeight=\"600\" fontSize={15} pt={1}>\n                            Password:\n                        </Typography>\n                        <CustomTextField\n                            fullWidth\n                            type={showPassword ? 'text' : 'password'}\n                            margin=\"dense\"\n                            variant=\"outlined\"\n                            required\n                            name=\"password\"\n                            value={formik.values.password}\n                            onChange={formik.handleChange}\n                            onBlur={formik.handleBlur}\n                            error={formik.touched.password && Boolean(formik.errors.password)}\n                            helperText={formik.touched.password && formik.errors.password}\n                            placeholder='**********'\n                            slotProps={{\n                                input: {\n                                    endAdornment: (\n                                        <InputAdornment position=\"end\">\n                                            <IconButton\n                                                onClick={togglePasswordVisibility}\n                                                edge=\"end\"\n                                                sx={{ color: 'primary.main' }} // Set the icon color to primary color\n                                            >\n                                                {showPassword ? <VisibilityOff /> : <Visibility />}\n                                            </IconButton>\n                                        </InputAdornment>\n                                    ),\n                                },\n                            }}\n                        />\n                        <Box display=\"flex\" justifyContent=\"flex-end\" mt={1}>\n                            <Link onClick={() =>\n                                navigate('/forgot-password')\n                            }\n                                variant=\"body2\" fontWeight={400} underline=\"hover\" sx={{ cursor: 'pointer' }}>\n                                Forgot password?\n                            </Link>\n                        </Box>\n                    </Box>\n                    <CustomButton\n                        fullWidth\n                        type=\"submit\"\n                        variant=\"contained\"\n                        sx={{ mt: 2, fontSize: 16 }}\n                    >\n                        {isSubmitting ? <CircularProgress sx={{ color: theme.palette.primary.main3 }} /> : ' Continue'}\n                    </CustomButton>\n                </form>\n            </Paper>\n\n            {/* Modal opens upon form submission */}\n            <CustomModal open={openModal} modalType={'login'} onClose={() => setOpenModal(false)} />\n        </Box>\n    );\n};\n\nexport default LoginForm;\n","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M21 11H6.83l3.58-3.59L9 6l-6 6 6 6 1.41-1.41L6.83 13H21z\"\n}), 'KeyboardBackspace');","import { Box, Typography, CircularProgress, Link } from '@mui/material';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport CustomButton from '../../custom-components/CustomButton';\nimport CustomTextField from '../../custom-components/CustomTextField';\nimport { useState } from 'react';\nimport KeyboardBackspaceIcon from '@mui/icons-material/KeyboardBackspace';\nimport { useNavigate } from 'react-router-dom';\nimport { useForgotPasswordStyles } from './LoginStyles';\nimport theme from '../../../theme';\nimport { ErrorMessage } from '../../../utils/ToastMessages';\nimport { forgotPassword } from '../../Services/Methods';\n\nconst ForgotPassword = ({ setEmail }: any) => {\n    const navigate = useNavigate();\n    const [isSubmitting, setIsSubmitting] = useState(false);\n    const classes = useForgotPasswordStyles();\n\n    // Formik setup for forgot password\n    const formik = useFormik({\n        initialValues: {\n            email: '',\n        },\n        validationSchema: Yup.object({\n            email: Yup.string()\n                .email('Invalid email address')\n                .required('Email is required'),\n        }),\n        onSubmit: (values) => {\n            setIsSubmitting(true);\n            handleForgotPassword(values.email)\n        },\n    });\n\n    const handleForgotPassword = async (email: any) => {\n        try {\n            // Critical request:\n            let response: any = await forgotPassword(email)\n            if (response.data.startsWith(\"OTP has been sent to:\")) {\n                setEmail(email)\n                navigate('/reset-password');\n            } else {\n                ErrorMessage(\"Couldn't send email to \" + email)\n            }\n        } catch (error) {\n            ErrorMessage(\"Couldn't send email to \" + email)\n        } finally {\n            setIsSubmitting(false);\n        }\n    }\n\n    return (\n        <Box className={classes.container}>\n            <Box className={classes.formWrapper}>\n                <Typography variant=\"h5\" className={classes.title}>\n                    Forgot Password\n                </Typography>\n                <Typography variant=\"body1\" className={classes.description}>\n                    If you forget your password, we will send you reset instructions.\n                </Typography>\n\n                {/* Email input */}\n                <Typography className={classes.label}>Email:</Typography>\n                <CustomTextField\n                    variant=\"outlined\"\n                    fullWidth\n                    margin=\"normal\"\n                    required\n                    name=\"email\"\n                    value={formik.values.email}\n                    onChange={formik.handleChange}\n                    onBlur={formik.handleBlur}\n                    error={formik.touched.email && Boolean(formik.errors.email)}\n                    helperText={formik.touched.email && formik.errors.email}\n                    placeholder=\"john123@gmail.com\"\n                />\n\n                <CustomButton\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"primary\"\n                    sx={{ mt: 2 }}\n                    onClick={() => formik.handleSubmit()}\n                >\n                    {isSubmitting ? <CircularProgress sx={{ color: theme.palette.primary.main3 }} /> : 'Continue'}\n                </CustomButton>\n\n                {/* Link to go back to Login page */}\n                <Box mt={2} textAlign=\"center\">\n                    <Link onClick={() => navigate('/login')} variant=\"body2\" fontWeight={400} underline=\"hover\" sx={{ cursor: 'pointer', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                        <KeyboardBackspaceIcon sx={{ fontSize: 16, px: 0.5 }} /> Back to Login\n                    </Link>\n                </Box>\n            </Box>\n        </Box>\n    );\n};\n\nexport default ForgotPassword;\n","import { Box, Typography, CircularProgress, Link } from '@mui/material';\nimport CustomButton from '../../custom-components/CustomButton';\nimport CustomTextField from '../../custom-components/CustomTextField';\nimport { useState } from 'react';\nimport KeyboardBackspaceIcon from '@mui/icons-material/KeyboardBackspace';\nimport theme from '../../../theme';\nimport { useNavigate } from 'react-router-dom';\nimport { useLoginStyles, useResetPasswordStyles } from './LoginStyles'; // Assuming LoginStyles is correctly exported\nimport { ErrorMessage, SuccessMessage } from '../../../utils/ToastMessages';\nimport { verifyOtp } from '../../Services/Methods';\n\nconst ResetPassword = ({ email, setOtp }: any) => {\n    const navigate = useNavigate();\n    const [isSubmitting, setIsSubmitting] = useState(false);\n    const [values, setValues] = useState(['', '', '', '']); // Array to hold 4-digit values\n\n    const loginClasses = useLoginStyles();\n    const classes = useResetPasswordStyles();\n\n    const handleChange = (e: any, index: number) => {\n        const newValues = [...values];\n        newValues[index] = e.target.value.slice(0, 1); // Restrict to 1 digit\n        setValues(newValues);\n\n        if (e.target.value) {\n            const nextField = document.getElementById(`digit-${index + 1}`);\n            if (nextField) nextField.focus();\n        }\n    };\n\n    const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>, index: number) => {\n        if (!/[0-9]/.test(e.key) && e.key !== 'Backspace') e.preventDefault();\n        if (e.key === 'Backspace' && !values[index]) {\n            const prevField = document.getElementById(`digit-${index - 1}`);\n            if (prevField) prevField.focus();\n        }\n    };\n\n    const handleFormSubmit = async () => {\n        const otp = values.join('');\n\n        if (otp.length !== 4) {\n            return ErrorMessage(\"Please enter a 4-digit OTP code.\");\n        }\n        setIsSubmitting(true);\n        try {\n            const response = await verifyOtp({ OTP: otp, Email: email });\n            if (response?.data) {\n                setOtp(otp);\n                navigate('/new-password');\n                SuccessMessage(\"OTP verification successful.\");\n            }\n        } catch (error) {\n            ErrorMessage(\"OTP verification failed. Please try again.\");\n        } finally {\n            setIsSubmitting(false);\n        }\n    };\n    return (\n        <Box className={loginClasses.componentContainer}>\n            <Box width=\"100%\" maxWidth={400}>\n                <Typography variant=\"h5\" mb={2}>\n                    Password Reset\n                </Typography>\n                <Typography variant=\"body1\" fontSize={15} mb={2}>\n                    We sent a code to “{email}”. Please enter the code below.\n                </Typography>\n                <Box className={classes.codeInputContainer}>\n                    {values.map((value, index) => (\n                        <CustomTextField\n                            key={index}\n                            id={`digit-${index}`}\n                            value={value}\n                            onChange={(e: any) => handleChange(e, index)}\n                            onKeyDown={(e: any) => handleKeyDown(e, index)}\n                            inputProps={{\n                                maxLength: 1,\n                                style: { textAlign: 'center', fontSize: 32, color: theme.palette.primary.main8, overflow: 'hidden' },\n                                inputMode: 'numeric',\n                            }}\n                        />\n                    ))}\n                </Box>\n                <CustomButton\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"primary\"\n                    sx={{ mt: 2 }}\n                    onClick={handleFormSubmit}\n                >\n                    {isSubmitting ? <CircularProgress sx={{ color: theme.palette.primary.main3 }} /> : 'Continue'}\n                </CustomButton>\n                {/* Link to go back to Login page */}\n                <Box mt={2} textAlign=\"center\">\n                    <Link onClick={() => navigate('/')} variant=\"body2\" fontWeight={400} underline=\"hover\" sx={{ cursor: 'pointer', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                        <KeyboardBackspaceIcon sx={{ fontSize: 16, px: 0.5 }} /> Back to Login\n                    </Link>\n                </Box>\n            </Box>\n        </Box>\n    );\n};\n\nexport default ResetPassword;\n","import { Box, Typography, Paper, Link, IconButton, InputAdornment, CircularProgress } from '@mui/material';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport KeyboardBackspaceIcon from '@mui/icons-material/KeyboardBackspace';\n\nimport CustomTextField from '../../custom-components/CustomTextField';\nimport CustomButton from '../../custom-components/CustomButton';\nimport CustomModal from '../../custom-components/CustomModal';\nimport { useSetNewPasswordStyles } from './LoginStyles';  // Import the new styles\nimport theme from '../../../theme';\nimport { updatePassword } from '../../Services/Methods';\nimport { ErrorMessage } from '../../../utils/ToastMessages';\n\nconst SetNewPassword = ({ email, otp }: any) => {\n    const navigate = useNavigate();\n    const classes = useSetNewPasswordStyles();  // Use the styles hook\n\n    const [showPassword, setShowPassword] = useState(false);\n    const [openModal, setOpenModal] = useState(false);\n    const [isSubmitting, setIsSubmitting] = useState(false);\n\n    // Formik setup\n    const formik = useFormik({\n        initialValues: {\n            password: '',\n            confirmPassword: '',\n        },\n        validationSchema: Yup.object({\n            password: Yup.string()\n                .min(8, 'Password should be at least 8 characters')\n                .matches(/[A-Z]/, 'Password must include at least one uppercase letter')\n                .matches(/[a-z]/, 'Password must include at least one lowercase letter')\n                .matches(/\\d/, 'Password must include at least one number')\n                .matches(/[@$!%*?&]/, 'Password must include at least one special character')\n                .required('Password is required'),\n            confirmPassword: Yup.string()\n                .oneOf([Yup.ref('password')], 'Passwords must match')\n                .required('Confirm password is required'),\n        }),\n        onSubmit: (values) => {\n            setIsSubmitting(true);\n            const payload = {\n                OTP: otp,\n                Email: email,\n                NewPassword: values.password\n            }\n            handleUpdatePassword(payload);\n        },\n    });\n\n    const handleUpdatePassword = async (payload: any) => {\n\n        try {\n            // Critical request:\n            let response: any = await updatePassword(payload)\n\n            if (response.data) {\n                setOpenModal(true);\n                setTimeout(() => {\n                    navigate('/login'); // Navigate back to login after resetting password\n                    setIsSubmitting(false);\n                }, 2000);\n            } else {\n                ErrorMessage(\"Couldn't reset password!\")\n            }\n\n        } catch (error) {\n            ErrorMessage(\"Couldn't reset password!\")\n        } finally {\n            setIsSubmitting(false);\n        }\n    }\n\n    const togglePasswordVisibility = () => {\n        setShowPassword((prev) => !prev);\n    };\n\n    return (\n        <Box className={classes.container}>\n            <Paper elevation={0} className={classes.paper}>\n                <Typography variant={'h5'} className={classes.title}>\n                    Set a new password\n                </Typography>\n                <Typography className={classes.description}>\n                    Your password must include special characters, capital letters, numbers, and lowercase letters.\n                </Typography>\n                <form onSubmit={formik.handleSubmit}>\n                    <Box className={classes.textFieldWrapper}>\n                        <Typography className={classes.label}>Password:</Typography>\n                        <CustomTextField\n                            fullWidth\n                            type={showPassword ? 'text' : 'password'}\n                            margin=\"dense\"\n                            variant=\"outlined\"\n                            required\n                            name=\"password\"\n                            value={formik.values.password}\n                            onChange={formik.handleChange}\n                            onBlur={formik.handleBlur}\n                            error={formik.touched.password && Boolean(formik.errors.password)}\n                            helperText={formik.touched.password && formik.errors.password}\n                            placeholder=\"**********\"\n                            slotProps={{\n                                input: {\n                                    endAdornment: (\n                                        <InputAdornment position=\"end\">\n                                            <IconButton\n                                                onClick={togglePasswordVisibility}\n                                                edge=\"end\"\n                                                sx={{ color: 'primary.main' }}\n                                            >\n                                                {showPassword ? <VisibilityOff /> : <Visibility />}\n                                            </IconButton>\n                                        </InputAdornment>\n                                    ),\n                                },\n                            }}\n                        />\n                    </Box>\n\n                    <Box className={classes.textFieldWrapper}>\n                        <Typography className={classes.label}>Confirm Password:</Typography>\n                        <CustomTextField\n                            fullWidth\n                            type={showPassword ? 'text' : 'password'}\n                            margin=\"dense\"\n                            variant=\"outlined\"\n                            required\n                            name=\"confirmPassword\"\n                            value={formik.values.confirmPassword}\n                            onChange={formik.handleChange}\n                            onBlur={formik.handleBlur}\n                            error={formik.touched.confirmPassword && Boolean(formik.errors.confirmPassword)}\n                            helperText={formik.touched.confirmPassword && formik.errors.confirmPassword}\n                            placeholder=\"**********\"\n                            slotProps={{\n                                input: {\n                                    endAdornment: (\n                                        <InputAdornment position=\"end\">\n                                            <IconButton\n                                                onClick={togglePasswordVisibility}\n                                                edge=\"end\"\n                                                sx={{ color: 'primary.main' }}\n                                            >\n                                                {showPassword ? <VisibilityOff /> : <Visibility />}\n                                            </IconButton>\n                                        </InputAdornment>\n                                    ),\n                                },\n                            }}\n                        />\n                    </Box>\n\n                    <CustomButton\n                        fullWidth\n                        type=\"submit\"\n                        variant=\"contained\"\n                        className={classes.buttonWrapper}\n                    >\n                        {isSubmitting ? <CircularProgress sx={{ color: theme.palette.primary.main3 }} /> : 'Reset Password'}\n                    </CustomButton>\n                </form>\n\n                {/* Link to navigate back to Login */}\n                <Box mt={2} textAlign=\"center\">\n                    <Link onClick={() => navigate('/login')} variant=\"body2\" fontWeight={400} underline=\"hover\" sx={{ cursor: 'pointer', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                        <KeyboardBackspaceIcon sx={{ fontSize: 16, px: 0.5 }} /> Back to Login\n                    </Link>\n                </Box>\n            </Paper>\n\n            {/* Modal opens upon form submission */}\n            <CustomModal open={openModal} modalType={'password'} onClose={() => setOpenModal(false)} />\n        </Box>\n    );\n};\n\nexport default SetNewPassword;\n","import { Box, Fade } from '@mui/material';\nimport { useLocation } from 'react-router-dom';\nimport Carousel from './login/Carousal';\nimport LoginForm from './login/LoginForm';\nimport ForgotPassword from './login/ForgotPassword';\nimport ResetPassword from './login/ResetPassword';\nimport SetNewPassword from './login/SetNewPassword';\nimport { useState, useEffect } from 'react';\nimport { useLoginStyles } from './login/LoginStyles';\n\nconst Login = ({ setIsAuthenticated }: any) => {\n    const location = useLocation();\n    const classes = useLoginStyles();\n\n    const [currentComponent, setCurrentComponent]: any = useState(null);\n    const [fadeIn, setFadeIn] = useState(false);\n    const [email, setEmail] = useState();\n    const [otp, setOtp] = useState();\n\n    useEffect(() => {\n        setFadeIn(false); // Trigger fade out\n        const timer = setTimeout(() => {\n            // Change the component after fade-out\n            setCurrentComponent(() => {\n                switch (location.pathname) {\n                    case '/forgot-password':\n                        return <ForgotPassword setEmail={setEmail} />;\n                    case '/reset-password':\n                        return <ResetPassword email={email} setOtp={setOtp} />;\n                    case '/new-password':\n                        return <SetNewPassword email={email} otp={otp} />;\n                    default:\n                        return <LoginForm setIsAuthenticated={setIsAuthenticated} />;\n                }\n            });\n            setFadeIn(true); // Trigger fade in\n        }, 300); // Match the fade-out duration\n\n        return () => clearTimeout(timer); // Clean up the timer\n    }, [location.pathname]);\n\n\n\n    return (\n        <Box className={classes.root}>\n            {/* Carousel */}\n            <Box className={classes.carouselContainer}>\n                <Carousel />\n            </Box>\n\n            {/* Animated Component */}\n            <Box className={classes.componentContainer}>\n                <Fade in={fadeIn} timeout={300}>\n                    <div className={classes.fadeWrapper}>{currentComponent}</div>\n                </Fade>\n            </Box>\n        </Box>\n    );\n};\n\nexport default Login;\n"],"names":["useCarousalStyles","makeStyles","container","flex","display","flexDirection","justifyContent","alignItems","padding","text","marginBottom","logo","width","imageWrapper","textAlign","image","height","transition","dotsContainer","marginTop","dotButton","size","margin","useLoginStyles","root","minHeight","overflow","carouselContainer","componentContainer","fadeWrapper","useForgotPasswordStyles","formWrapper","maxWidth","title","description","fontSize","label","paddingTop","fontWeight","useResetPasswordStyles","codeInputContainer","gap","useSetNewPasswordStyles","paper","textFieldWrapper","buttonWrapper","Carousel","theme","useTheme","primaryColor","palette","primary","main","isMobile","useMediaQuery","breakpoints","down","classes","currentIndex","setCurrentIndex","useState","fadeIn","setFadeIn","intervalRef","useRef","items","svg","useEffect","current","clearInterval","setInterval","setTimeout","prevIndex","length","_jsxs","Box","className","style","children","_jsx","src","concat","process","alt","Fade","in","timeout","component","map","_","index","IconButton","onClick","handleDotClick","sx","backgroundColor","border","fill","main3","FiberManualRecordIcon","getLinkUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_ref","ownerState","transformedColor","color","getPath","channelColor","alpha","_excluded","v6Colors","secondary","error","info","success","warning","textPrimary","textSecondary","textDisabled","LinkRoot","styled","Typography","name","overridesResolver","props","styles","capitalize","underline","button","memoTheme","variants","textDecoration","textDecorationColor","_ref2","Object","entries","filter","createSimplePaletteValueFilter","_ref3","vars","mainChannel","primaryChannel","secondaryChannel","disabled","position","WebkitTapHighlightColor","outline","borderRadius","cursor","userSelect","verticalAlign","MozAppearance","WebkitAppearance","borderStyle","linkClasses","focusVisible","Link","React","inProps","ref","useDefaultProps","onBlur","onFocus","TypographyClasses","variant","other","_objectWithoutProperties","setFocusVisible","_objectSpread","slots","composeClasses","useUtilityClasses","clsx","event","isFocusVisible","target","undefined","Array","isArray","getTextDecoration","createSvgIcon","d","open","onClose","modalType","content","type","desc","find","item","Dialog","right","HighlightOffIcon","DialogContent","my","mt","setIsAuthenticated","navigate","useNavigate","showPassword","setShowPassword","openModal","setOpenModal","isSubmitting","setIsSubmitting","formik","useFormik","initialValues","email","password","validationSchema","Yup","required","min","onSubmit","values","loginUser","async","response","SignInUser","payload","status","sessionStorage","setItem","JSON","stringify","_error$response","ErrorMessage","Paper","elevation","py","gutterBottom","handleSubmit","CustomTextField","fullWidth","value","onChange","handleChange","handleBlur","touched","Boolean","errors","helperText","placeholder","pt","slotProps","input","endAdornment","InputAdornment","togglePasswordVisibility","prev","edge","VisibilityOff","Visibility","CustomButton","CircularProgress","CustomModal","setEmail","handleForgotPassword","forgotPassword","data","startsWith","KeyboardBackspaceIcon","px","setOtp","setValues","loginClasses","mb","id","e","newValues","slice","nextField","document","getElementById","focus","onKeyDown","handleKeyDown","test","key","preventDefault","prevField","inputProps","maxLength","main8","inputMode","otp","join","verifyOtp","OTP","Email","SuccessMessage","confirmPassword","matches","oneOf","NewPassword","handleUpdatePassword","updatePassword","location","useLocation","currentComponent","setCurrentComponent","timer","pathname","ForgotPassword","ResetPassword","SetNewPassword","LoginForm","clearTimeout"],"sourceRoot":""}